Binary Tree Inorder Traversal
Given a binary tree, return the inorder traversal of its nodes' values.

Have you met this question in a real interview? Yes
Example
Given binary tree {1,#,2,3},

   1
    \
     2
    /
   3
 

return [1,3,2].



/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Inorder in vector which contains node values.
     */
public:
    vector<int> inorderTraversal(TreeNode *root) {
        // write your code here
        vector<int> res;
        if(root == NULL) return res;
        
        stack<TreeNode*> stk;
        TreeNode* cur = root;
        
        while(!stk.empty() || cur != NULL)
        {
            while(cur != NULL)
            {
                stk.push(cur);
                cur = cur->left;
            }
            
            TreeNode* node = stk.top();
            stk.pop();
            
            res.push_back(node->val);
            cur = node->right;
        }
        
        return res;
    }
};
