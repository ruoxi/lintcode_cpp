Minimum Size Subarray Sum

 Description
 Notes
 Testcase
 Judge
Given an array of n positive integers and a positive integer s, find the minimal length of a subarray of which the sum â‰¥ s. If there isn't one, return -1 instead.

Have you met this question in a real interview? Yes
Example
Given the array [2,3,1,2,4,3] and s = 7, the subarray [4,3] has the minimal length under the problem constraint.


//Runtime: O(n)
//space: O(1)

class Solution {
public:
    /**
     * @param nums: a vector of integers
     * @param s: an integer
     * @return: an integer representing the minimum size of subarray
     */
    
    int minimumSize(vector<int> &nums, int s) {
        // write your code here
        
        if(nums.empty()) return -1;
        
        int n = nums.size();
        
        int sum;
        int res = n+1;
        int j = 0;
        for(int i = 0; i < n; i++)
        {
            while(j< n && sum < s)
            {
                sum += nums[j];
                j++;
            }
            
            if(sum >= s && res > j-i)
            {
                res = j-i;
            }
            
            //remove nums[i] from sum
            sum -= nums[i];
        }
        
        return res == n+1 ? -1 : res;
    }
};
