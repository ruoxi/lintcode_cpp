Word Break

 Description
 Notes
 Testcase
 Judge
Given a string s and a dictionary of words dict, determine if s can be break into a space-separated sequence of one or more dictionary words.

Have you met this question in a real interview? Yes
Example
Given s = "lintcode", dict = ["lint", "code"].

Return true because "lintcode" can be break as "lint code".
class Solution {
public:
    /**
     * @param s: A string s
     * @param dict: A dictionary of words dict
     */
    //序列型dp
    //state: dp[i]表示s[0...i-1] can be break
    //function: dp[i] = OR{dp[j] && s[j...i-1] can be found in dict}
    //initialization: dp[0] = true
    bool wordBreak(string s, unordered_set<string> &dict) {
        // write your code here
        if(s.empty()) return true;
        int maxwordlength = maxlength(dict);
        int n = s.length();
        vector<bool> dp(n+1, false);
        dp[0] = true;
        
        for(int i = 1; i <= n; i++)
        {
            for(int j = i-1; j >=0 && j>=i-maxwordlength;j--)
            {
                if(!dp[j]) continue;
                string sub = s.substr(j,i-j);
                if(dict.find(sub) != dict.end())
                {
                    dp[i] = true;
                    break;

                }
            }
        }
        
        return dp[n];
        
    }
    
    int maxlength(unordered_set<string>& dict)
    {
        int res = 0;
        for(auto str : dict)
        {
            res = max(res, (int)str.length());
        }
        
        return res;
    }
};
