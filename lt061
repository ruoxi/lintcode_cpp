Search for a Range

 Description
 Notes
 Testcase
 Judge
Given a sorted array of n integers, find the starting and ending position of a given target value.

If the target is not found in the array, return [-1, -1].

Have you met this question in a real interview? Yes
Example
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].


class Solution {
    /** 
     *@param A : an integer sorted array
     *@param target :  an integer to be inserted
     *return : a list of length 2, [index1, index2]
     */
public:
    vector<int> searchRange(vector<int> &A, int target) {
        // write your code here
        
        if(A.empty()) return vector<int>{-1, -1};
        
        int first = findFirst(A, target);
        if(first == -1) return vector<int>{-1, -1};
        
        int last = findLast(A, target);
        return vector<int>{first, last};
        
    }
    
    int findFirst(vector<int>& A, int target)
    {
        int start = 0, end = A.size()-1;
        
        while(start + 1 < end)
        {
            int mid = start + (end - start)/2;
            
            if(A[mid]>=target)
            {
                end = mid;
            }
            else
            {
                start = mid;
            }
        }
        
        if(A[start] == target) return start;
        if(A[end] == target) return end;
        return -1;
    }
    
    int findLast(vector<int>& A, int target)
    {
        int start = 0, end = A.size()-1;
        
        while(start+1 < end)
        {
            int mid = start+ (end-start)/2;
            if(A[mid] <= target)
            {
                start = mid;
            }
            else
            {
                end = mid;
            }
        }
        
        if(A[end] == target) return end;
        if(A[start] == target) return start;
        return -1;
    }
};
