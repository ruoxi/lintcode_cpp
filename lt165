Merge Two Sorted Lists

 Description
 Notes
 Testcase
 Judge
Merge two sorted (ascending) linked lists and return it as a new sorted list. The new sorted list should be made by splicing together the nodes of the two lists and sorted in ascending order.

Have you met this question in a real interview? Yes
Example
Given 1->3->8->11->15->null, 2->null , return 1->2->3->8->11->15->null.


/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param ListNode l1 is the head of the linked list
     * @param ListNode l2 is the head of the linked list
     * @return: ListNode head of linked list
     */
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        // write your code here
        if(l1 == NULL) return l2;
        if(l2 == NULL) return l1;
        
        ListNode dummy(-1);
        ListNode* prev = &dummy;
        
        while(l2 != NULL && l1 != NULL)
        {
            if(l1->val < l2->val)
            {
                prev->next = l1;
                l1 = l1->next;
            }
            else 
            {
                prev->next = l2;
                l2 = l2->next;
            }
            prev=prev->next;
        }
        
        if(l1 != NULL)
        {
            prev->next = l1;
        }
        
        if(l2 != NULL)
        {
            prev->next = l2;
        }
        
        return dummy.next;
    }
};
