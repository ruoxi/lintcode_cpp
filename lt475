Binary Tree Maximum Path Sum II

Given a binary tree, find the maximum path sum from root.

The path may end at any node in the tree and contain at least one node in it.


Example 

Given the below binary tree:
  1
 / \
2   3


return 4. (1->3)



/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root the root of binary tree.
     * @return an integer
     */
    int maxPathSum2(TreeNode *root) {
        // Write your code here
        
        if(root == NULL) return 0;
        if(root->left == NULL && root->right == NULL) return root->val;
        
        int left = maxPathSum2(root->left);
        int right = maxPathSum2(root->right);
        
        return max(max(left, right), 0) + root->val;
    }
};
