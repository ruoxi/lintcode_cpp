Number of Airplanes in the Sky

 Description
 Notes
 Testcase
 Judge
Given an interval list which are flying and landing time of the flight. How many airplanes are on the sky at most?

 Notice

If landing and flying happens at the same time, we consider landing should happen at first.

Have you met this question in a real interview? Yes
Example
For interval list

[
  [1,10],
  [2,3],
  [5,8],
  [4,7]
]
Return 3

//Runtime:O(nlogn)
//Space: O(n)

/**
 * Definition of Interval:
 * classs Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this->start = start;
 *         this->end = end;
 *     }
 */
class Solution {
public:
    /**
     * @param intervals: An interval array
     * @return: Count of airplanes are in the sky.
     */
     
    class Point
    {
    public:
        int timestamp;
        bool isstart;
        Point(int t, bool iss)
        {
            timestamp = t;
            isstart = iss;
        }
    };
    
    class Comparator
    {
    public:
        bool operator()(const Point& a, const Point& b)
        {
            if(a.timestamp == b.timestamp) return !a.isstart;
            
            return a.timestamp < b.timestamp;
        }
    };
    //sweep line
    //要在飞机起飞和降落的时间点看飞机数量的变化
    int countOfAirplanes(vector<Interval> &airplanes) {
        // write your code here
        
        if(airplanes.empty()) return 0;
        
        vector<Point> points;
        for(int i = 0; i < airplanes.size(); i++)
        {
            Point start(airplanes[i].start, true);
            Point end(airplanes[i].end, false);
            points.push_back(start);
            points.push_back(end);
        }
        
        sort(points.begin(), points.end(), Comparator());
        
        int cnt = 0;
        int res = 0;
        for(int i = 0; i < points.size(); i++)
        {
            if(points[i].isstart)
            {
                cnt++;
            }
            else
            {
                cnt--;
            }
            
            if(cnt > res)
            {
                res = cnt;
            }
        }
        
        return res;
        
    }
};
