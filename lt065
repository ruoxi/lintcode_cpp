Median of two Sorted Arrays

 Description
 Notes
 Testcase
 Judge
There are two sorted arrays A and B of size m and n respectively. Find the median of the two sorted arrays.

Have you met this question in a real interview? Yes
Example
Given A=[1,2,3,4,5,6] and B=[2,3,4,5], the median is 3.5.

Given A=[1,2,3] and B=[4,5], the median is 3.

class Solution {
public:
    /**
     * @param A: An integer array.
     * @param B: An integer array.
     * @return: a double whose format is *.5 or *.0
     */
     
    //把问题转化成在A,B数组中找第k大的数
    double findMedianSortedArrays(vector<int> A, vector<int> B) {
        // write your code here
        
        int n = A.size(), m = B.size();
        
        if((m+n)%2 == 1)
        {
            return (double)getKthNumber(A, 0, B, 0, (m+n+1)/2);
        }
        else
        {
            //cout << "even\n";
            return (double)(getKthNumber(A, 0, B, 0, (m+n+1)/2) + getKthNumber(A, 0, B, 0, (m+n+2)/2))/2.0;
        }
    }
    
    
    int getKthNumber(vector<int>&A, int startA, vector<int>& B, int startB, int k)
    {
        //cout << "startA=" << startA <<" startB=" << startB << " k=" << k << endl;
        if(startA>=A.size()) return B[startB+k-1];
        if(startB>=B.size()) return A[startA+k-1];
        
        if(k == 1)
        {
            return min(A[startA], B[startB]);
        }
        
        int midA = startA+k/2-1 < A.size() ? A[startA+k/2-1] : INT_MAX;
        int midB = startB+k/2-1 < B.size() ? B[startB+k/2-1] : INT_MAX;
        
        if(midA > midB)
        {
            //we can throw away B[startB, midB]
            return getKthNumber(A, startA, B, startB+k/2, k-k/2);
            
        }
        else
        {
            return getKthNumber(A, startA+k/2, B, startB, k-k/2);
        }
    }
};
