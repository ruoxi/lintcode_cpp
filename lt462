Total Occurrence of Target

 Description
 Notes
 Testcase
 Judge
Given a target number and an integer array sorted in ascending order. Find the total number of occurrences of target in the array.

Have you met this question in a real interview? Yes
Example
Given [1, 3, 3, 4, 5] and target = 3, return 2.

Given [2, 2, 3, 4, 6] and target = 4, return 1.

Given [1, 2, 3, 4, 5] and target = 6, return 0.


class Solution {
public:
    /**
     * @param A an integer array sorted in ascending order
     * @param target an integer
     * @return an integer
     */
    //find the first occurance of target
    //find the last occurance of target
    //then total occurance is last-first+1
    int totalOccurrence(vector<int>& A, int target) {
        // Write your code here
        if(A.empty()) return 0;
        
        int first = findFirst(A, target);
        int last = findLast(A, target);
        if(first == -1) return 0;
        
        return last-first+1;
    }
    
    int findFirst(vector<int>& A, int target)
    {
        int start = 0, end = A.size();
        
        while(start + 1  < end)
        {
            int mid = start + (end -start)/2;
            
            if(A[mid] >= target)
            {
                end = mid;
            }
            else
            {
                start = mid;
            }
        }
        
        if(A[start] == target) return start;
        if(A[end] == target) return end;
        return -1;
    }
    
    int findLast(vector<int>& A, int target)
    {
        int start = 0,  end = A.size();
        
        while(start + 1 < end)
        {
            int mid = start + (end - start)/2;
            if(A[mid] <=target)
            {
                start = mid;
            }
            else
            {
                end = mid;
            }
        }
        
        if(A[end] == target) return end;
        if(A[start] == target) return start;
        return -1;
    }
};
