Connecting Graph III
Given n nodes in a graph labeled from 1 to n. There is no edges in the graph at beginning.

You need to support the following method:
1. connect(a, b), an edge to connect node a and node b
2. query(), Returns the number of connected component in the graph

Have you met this question in a real interview? Yes
Example
5 // n = 5
query() return 5
connect(1, 2)
query() return 4
connect(2, 4)
query() return 3
connect(1, 4)
query() return 3

class ConnectingGraph3 {
public:
    ConnectingGraph3(int n) {
        // initialize your data structure here.
        father.assign(n+1, 0);
        cnt = 0;
        
        for(int i = 1; i <=n; i++)
        {
            father[i] = i;
            cnt++;
        }
    }
        
    void  connect(int a, int b) {
        // Write your code here
        int roota = find(a);
        int rootb = find(b);
        if(roota != rootb)
        {
            father[roota] = rootb;
            cnt--;
        }
    }

    int query() {
        // Write your code here
        return cnt;
    }
    
    int find(int a)
    {
        int pa = father[a];
        while(pa != father[pa])
        {
            pa = father[pa];
        }
        
        int root = pa;
        pa = a;
        while(pa != father[pa])
        {
            int tmp = father[pa];
            father[pa] = root;
            pa = tmp;
        }
        
        return root;
    }
    
    vector<int> father;
    int cnt;
};
