Subarray Sum

 Description
 Notes
 Testcase
 Judge
Given an integer array, find a subarray where the sum of numbers is zero. Your code should return the index of the first number and the index of the last number.

 Notice

There is at least one subarray that it's sum equals to zero.

Have you met this question in a real interview? Yes
Example
Given [-3, 1, 2, -3, 4], return [0, 2] or [1, 3].




class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number 
     *          and the index of the last number
     */
    //partial sum 找和相等的index
    vector<int> subarraySum(vector<int> nums){
        // write your code here
        
        if(nums.empty()) return vector<int>();
        
        int n = nums.size();
        
        //key is sum, value is idx
        unordered_map<int, int> sum; 
        sum[0] = 0;
        vector<int> res;
        
        int cur = 0;
        for(int i = 1; i <=n; i++)
        {
            cur += nums[i-1];
            if(sum.count(cur) > 0)
            {
                res.push_back(sum[cur]);
                res.push_back(i-1);
                return res;
            }
            sum[cur] = i;
            
        }
        
        return res;
    }
};
