Closest Number in Sorted Array

 Description
 Notes
 Testcase
 Judge
Given a target number and an integer array A sorted in ascending order, find the index i in A such that A[i] is closest to the given target.

Return -1 if there is no element in the array.

 Notice

There can be duplicate elements in the array, and we can return any of the indices with same value.

Have you met this question in a real interview? Yes
Example
Given [1, 2, 3] and target = 2, return 1.

Given [1, 4, 6] and target = 3, return 1.

Given [1, 4, 6] and target = 5, return 1 or 2.

Given [1, 3, 3, 4] and target = 2, return 0 or 1 or 2.




class Solution {
public:
    /**
     * @param A an integer array sorted in ascending order
     * @param target an integer
     * @return an integer
     */
    //find first occurance of target
    //if not exist, compare A[start] and A[end]
    int closestNumber(vector<int>& A, int target) {
        // Write your code here
        
        if(A.empty()) return -1;
        
        int start = 0, end = A.size()-1;
        
        while(start + 1 < end)
        {
            int mid = start + (end -start)/2;
            
            if(A[mid] == target) return mid;
            if(A[mid] < target)
            {
                start = mid;
            }
            else
            {
                end = mid;
            }
        }
        
        if(abs(A[start]-target) < abs(A[end]-target)) return start;
        return end;
    }
};
