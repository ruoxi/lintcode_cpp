Sort Colors

 Description
 Notes
 Testcase
 Judge
Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

 Notice

You are not suppose to use the library's sort function for this problem. 
You should do it in-place (sort numbers in the original array).

Have you met this question in a real interview? Yes
Example
Given [1, 0, 1, 2], sort it in-place to [0, 1, 1, 2].


class Solution{
public:
    /**
     * @param nums: A list of integer which is 0, 1 or 2 
     * @return: nothing
     */    
    void sortColors(vector<int> &nums) {
        // write your code here
        
        if(nums.empty()) return;
        
        int n = nums.size();

        int zero = 0;
        int two = n-1;

        //这里注意i<=two, 因为two指的位置是下一个可以和nums[i]==2互换的位置，nums[two]并没有被验证过是什么数字，因此需要有等于号
        for(int i = 0; i <= two; )
        {
            if(nums[i] == 0)
            {
                swap(nums[zero], nums[i]);
                zero++;
                i++;
            }
            else if(nums[i] == 1)
            {
                i++;
                continue;
            }
            else if(nums[i] == 2)
            {
                swap(nums[i], nums[two]);
                two--;
            }
            

        }
        
        
    }
};
