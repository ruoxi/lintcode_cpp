Find Minimum in Rotated Sorted Array

 Description
 Notes
 Testcase
 Judge
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

 Notice

You may assume no duplicate exists in the array.

Have you met this question in a real interview? Yes
Example
Given [4, 5, 6, 7, 0, 1, 2] return 0




class Solution {
public:
    /**
     * @param nums: a rotated sorted array
     * @return: the minimum number in the array
     */
    int findMin(vector<int> &nums) {
        // write your code here
        if(nums.empty()) return 0;
        
        int start = 0, end = nums.size()-1;
        
        while(start + 1 < end)
        {
            int mid = start + (end-start)/2;
            
            if(nums[start] > nums[end])
            {
                if(nums[start] < nums[mid])
                {
                    start = mid;
                }
                else
                {
                    end = mid;
                }
            }
            else
            {
                end = mid;
            }
        }
        
        if(nums[start] < nums[end]) return nums[start];
        return nums[end];
    }
};
